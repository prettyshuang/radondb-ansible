#!/bin/bash
set -e
{{ deploy_dir }}/bin/mysql -h localhost -u root -S /tmp/mysql.sock -e "
INSTALL PLUGIN tokudb SONAME 'ha_tokudb.so';
INSTALL PLUGIN tokudb_file_map SONAME 'ha_tokudb.so';
INSTALL PLUGIN tokudb_fractal_tree_info SONAME 'ha_tokudb.so';
INSTALL PLUGIN tokudb_fractal_tree_block_map SONAME 'ha_tokudb.so';
INSTALL PLUGIN tokudb_trx SONAME 'ha_tokudb.so';
INSTALL PLUGIN tokudb_locks SONAME 'ha_tokudb.so';
INSTALL PLUGIN tokudb_lock_waits SONAME 'ha_tokudb.so';
INSTALL PLUGIN tokudb_background_job_status SONAME 'ha_tokudb.so';
grant all privileges on *.* to '{{mysql_user}}'@'{{ ansible_default_ipv4.address }}' identified by '{{ mysql_passwd }}' with grant option;
grant all privileges on *.* to '{{mysql_user}}'@'%' identified by '{{ mysql_passwd }}' with grant option;
grant replication client, process on *.* to {{ mysqld_exporter_usr }}@'localhost' identified by '{{ mysqld_exporter_passwd }}';
grant select on performance_schema.* TO {{ mysqld_exporter_usr }}@'localhost';
grant all privileges on *.* to '{{mysql_user}}'@'localhost' identified by '{{ mysql_passwd }}' with grant option;
"
{% if mysql_user == 'root' %}
{{ deploy_dir }}/bin/mysql -h localhost -u root -p{{ mysql_passwd }} -e "
delete from mysql.user where authentication_string='';
drop database if exists test;
flush privileges;
"
{% else %}
{{ deploy_dir }}/bin/mysql -h localhost -u root -S /tmp/mysql.sock -e "
delete from mysql.user where authentication_string='';
drop database if exists test;
flush privileges;
"
{% endif %}
{{ deploy_dir }}/bin/mysql.server stop >/dev/null 2>&1 &
sleep 5
rm -rf /tmp/$(basename $0)
